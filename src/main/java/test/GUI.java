/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import org.biojava.nbio.core.exceptions.CompoundNotFoundException;
import org.biojava.nbio.core.sequence.DNASequence;

/**
 *
 * @author Koen
 */
public class GUI extends javax.swing.JFrame {

    private FASTASequentie fastaSequentie;
    private SpecifiekeDataOpslag opslag;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        toonORFsButton.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openButton = new javax.swing.JButton();
        padTextField = new javax.swing.JTextField();
        seqScrollPane = new javax.swing.JScrollPane();
        dnaSequentieTextPane = new javax.swing.JTextPane();
        headerLabel = new javax.swing.JLabel();
        toonORFsButton = new javax.swing.JButton();
        dummyUpperScrollPane = new javax.swing.JScrollPane();
        dummyUpperPanel = new javax.swing.JPanel();
        aaSequentieTextPaneUpper = new javax.swing.JTextPane();
        dummyLowerScrollPane = new javax.swing.JScrollPane();
        dummyPanel1 = new javax.swing.JPanel();
        aaSequentieTextPaneLower = new javax.swing.JTextPane();
        MenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        browseMenuItem = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        saveDnaMenuItem = new javax.swing.JMenuItem();
        saveOrfsMenuItem = new javax.swing.JMenuItem();
        saveBlastMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        exportDnaMenuItem = new javax.swing.JMenuItem();
        exportOrfsMenuItem = new javax.swing.JMenuItem();
        exportBlastMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AANSCHOUW DE ORF VOORSPELLER");
        setPreferredSize(new java.awt.Dimension(800, 600));

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        dnaSequentieTextPane.setEditable(false);
        dnaSequentieTextPane.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        seqScrollPane.setViewportView(dnaSequentieTextPane);

        headerLabel.setMaximumSize(new java.awt.Dimension(300, 30));
        headerLabel.setMinimumSize(new java.awt.Dimension(300, 30));
        headerLabel.setPreferredSize(new java.awt.Dimension(300, 30));

        toonORFsButton.setText("Toon ORFs");
        toonORFsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toonORFsButtonActionPerformed(evt);
            }
        });

        dummyUpperScrollPane.setPreferredSize(new java.awt.Dimension(8, 22));

        dummyUpperPanel.setLayout(new java.awt.BorderLayout());

        aaSequentieTextPaneUpper.setEditable(false);
        aaSequentieTextPaneUpper.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        aaSequentieTextPaneUpper.setPreferredSize(null);
        dummyUpperPanel.add(aaSequentieTextPaneUpper, java.awt.BorderLayout.CENTER);

        dummyUpperScrollPane.setViewportView(dummyUpperPanel);

        dummyLowerScrollPane.setPreferredSize(new java.awt.Dimension(8, 22));

        dummyPanel1.setLayout(new java.awt.BorderLayout());

        aaSequentieTextPaneLower.setEditable(false);
        aaSequentieTextPaneLower.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        aaSequentieTextPaneLower.setPreferredSize(null);
        dummyPanel1.add(aaSequentieTextPaneLower, java.awt.BorderLayout.CENTER);

        dummyLowerScrollPane.setViewportView(dummyPanel1);

        jMenu1.setText("File");

        browseMenuItem.setText("Browse");
        browseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(browseMenuItem);

        jMenu4.setText("Save as File..");

        saveDnaMenuItem.setText("Full DNA Seq");
        jMenu4.add(saveDnaMenuItem);

        saveOrfsMenuItem.setText("ORFs");
        jMenu4.add(saveOrfsMenuItem);

        saveBlastMenuItem.setText("BLAST");
        jMenu4.add(saveBlastMenuItem);

        jMenu1.add(jMenu4);

        MenuBar.add(jMenu1);

        jMenu2.setText("Export to DB");

        exportDnaMenuItem.setText("Full DNA Seq");
        exportDnaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportDnaMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(exportDnaMenuItem);

        exportOrfsMenuItem.setText("ORFs");
        exportOrfsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportOrfsMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(exportOrfsMenuItem);

        exportBlastMenuItem.setText("BLAST");
        jMenu2.add(exportBlastMenuItem);

        MenuBar.add(jMenu2);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dummyUpperScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(seqScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(dummyLowerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(padTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(openButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 68, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(toonORFsButton)
                        .addGap(190, 190, 190))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(padTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toonORFsButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(headerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dummyUpperScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(seqScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dummyLowerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        try {
            String filePad;
            File fastaFile;
            LinkedHashMap<String, DNASequence> ingeladenSequentie = new LinkedHashMap<>();

            //noodzakelijk omdat de gebruiker ook direct filepad in kan typen ipv te browsen
            filePad = padTextField.getText();
            fastaFile = new File(filePad);

            BestandOpener opener = new BestandOpener();
            ingeladenSequentie = opener.openDNABestand(fastaFile);

            fastaSequentie = FASTASequentieHelper.saveFASTASequentie(ingeladenSequentie);
            headerLabel.setText(fastaSequentie.getTitel());

            Visualisator visual = new Visualisator(fastaSequentie);
            dnaSequentieTextPane.setText(visual.getSequentieMetComplementair());
            aaSequentieTextPaneUpper.setText(visual.getForwardAminoSequenties());
            aaSequentieTextPaneLower.setText(visual.getReverseAminoSequenties());

//verbind de scroll bars van de afzonderlijke text panes aan elkaar zodat gebruiker maar in 1 pane hoeft te scrollen
            dummyLowerScrollPane.setHorizontalScrollBar(dummyUpperScrollPane.getHorizontalScrollBar());
            seqScrollPane.setHorizontalScrollBar(dummyLowerScrollPane.getHorizontalScrollBar());

            toonORFsButton.setEnabled(true);
            
        } catch (OngeldigBestandException ex) {
            errorPopup("ONGELDIG/GEEN BESTAND GEKOZEN");
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void browseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseMenuItemActionPerformed
        BestandKiezer browser = new BestandKiezer();
        padTextField.setText(browser.browseBestandPad()); //zet de file locatie als text in de textfield

    }//GEN-LAST:event_browseMenuItemActionPerformed

    private void exportOrfsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportOrfsMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportOrfsMenuItemActionPerformed

    private void toonORFsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toonORFsButtonActionPerformed
        ORFSearcher orfFinder = new ORFSearcher();
        try {
            orfFinder.vindORFs(fastaSequentie);
        } catch (CompoundNotFoundException ex) { //FIX DIT
            ex.printStackTrace();
        }

        //testo GET OUT OF GUI
        ArrayList<ORF> test = orfFinder.getORFLijst();
        String phuck;
        String phuck2;

        String[] bird;
        String[] istheword;
        int orfStart;
        int orfEind;
        int orfFrame;
        int totaalLengte;

        phuck = aaSequentieTextPaneUpper.getText();
        phuck2 = aaSequentieTextPaneLower.getText();

        bird = phuck.split("\n");
        istheword = phuck2.split("\n");

        for (ORF orf : test) {
            orfStart = orf.getStartPos();
            orfEind = orf.getEindPos();
            //System.out.println(orfStart + " " + orfEind);
            orfFrame = orfStart % 3;
            //  System.out.println(orfFrame + " Strand: " + orf.getStrand());
            switch (orf.getStrand()) {

                case ('+'):
                    for (int i = 0; i < orfFrame; i++) {
                        orfStart += bird[i].length();
                        orfEind += bird[i].length();
                    }

                    try {
                        Visualisator.highlight(orfStart, orfEind, aaSequentieTextPaneUpper);
                    } catch (BadLocationException ex) {
                        errorPopup("Ongeldige ORF posities gevonden");
                    }

                    break;

                case ('-'):
                    //waarom is de visualisatie verkeerd om?
                    for (int i = 0; i < orfFrame; i++) {
                        orfStart += istheword[i].length();
                        orfEind += istheword[i].length();
                    }
                    try {
                        //SEQUENTIE IS IN REVERSE DUS GOTTA TURN AROUND POSITIES
                        Visualisator.highlight(orfEind, orfStart, aaSequentieTextPaneLower);
                    } catch (BadLocationException ex) {
                        errorPopup("Ongeldige ORF posities gevonden");
                    }

                    break;
            }
        }
    }//GEN-LAST:event_toonORFsButtonActionPerformed

    private void exportDnaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportDnaMenuItemActionPerformed
        try {
            opslag = new SpecifiekeDataOpslag();
            opslag.saveDNA(fastaSequentie);
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (NullPointerException ex) {
            errorPopup("GEEN DNA SEQUENTIE GEVONDEN OM IN TE LADEN");
        }
    }//GEN-LAST:event_exportDnaMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);

            }
        });
    }

    /**
     * Dient enkel om de pop-up window voor exceptions aan te maken, afhankelijk
     * van de exception zal de werkelijk getoonde tekst verschillen
     *
     * @param errortekst de tekst (meegegeven bij de exception) dat getoond
     * wordt in de pop-up window
     */
    public void errorPopup(String errortekst) {
        JOptionPane.showMessageDialog(this, errortekst, "FOUTJE", JOptionPane.WARNING_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JTextPane aaSequentieTextPaneLower;
    private javax.swing.JTextPane aaSequentieTextPaneUpper;
    private javax.swing.JMenuItem browseMenuItem;
    private javax.swing.JTextPane dnaSequentieTextPane;
    private javax.swing.JScrollPane dummyLowerScrollPane;
    private javax.swing.JPanel dummyPanel1;
    private javax.swing.JPanel dummyUpperPanel;
    private javax.swing.JScrollPane dummyUpperScrollPane;
    private javax.swing.JMenuItem exportBlastMenuItem;
    private javax.swing.JMenuItem exportDnaMenuItem;
    private javax.swing.JMenuItem exportOrfsMenuItem;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JButton openButton;
    private javax.swing.JTextField padTextField;
    private javax.swing.JMenuItem saveBlastMenuItem;
    private javax.swing.JMenuItem saveDnaMenuItem;
    private javax.swing.JMenuItem saveOrfsMenuItem;
    private javax.swing.JScrollPane seqScrollPane;
    private javax.swing.JButton toonORFsButton;
    // End of variables declaration//GEN-END:variables
}
